Дана строка символов. Определить количество букв, количество цифр и количество остальных символов, присутствующих в строке.
#include <iostream>
#include <Windows.h>

int letters(char*);
int numbers(char*);
int symbols(char*);

int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	char string[256];
	std::cout << "введите строку: ";
	std::cin.getline(string, 256);
	std::cout << "количество букв в строке: " << letters(string) << std::endl;
	std::cout << "количество цифр в строке: " << numbers(string) << std::endl;
	std::cout << "количество прочих символов(исключая пробел) в строке: " << symbols(string) << std::endl;
	system("pause");
	return 0;
}

int letters(char *string) {
	int count = 0;
	for(int i = 0; i < strlen(string); i++)
		if((string[i] >= 'À' && string[i] <= 'ß') || (string[i] >= 'à' && string[i] <= 'ÿ'))
			count++;
		else if((string[i] >= 'A' && string[i] <= 'Z') || (string[i] >= 'a' && string[i] <= 'z'))
			count++;
	return count;
}
int numbers(char *string) {
	int count = 0;
	for(int i = 0; i < strlen(string); i++)
		if(string[i] >= '0' && string[i] <= '9')
			count++;
	return count;
}
int symbols(char *string) {
	int count = 0;
	for(int i = 0; i < strlen(string); i++) {
		if((string[i] >= 'À' && string[i] <= 'ß') || (string[i] >= 'à' && string[i] <= 'ÿ'))
			continue;
		else if((string[i] >= 'A' && string[i] <= 'Z') || (string[i] >= 'a' && string[i] <= 'z'))
			continue;
		else if(string[i] >= '0' && string[i] <= '9')
			continue;
		else if(string[i] == ' ')
			continue;
		else
			count++;
	}
	return count;
}

Удалить из строки заданное слово.
#include <iostream>
#include <Windows.h>

char *newstring(char*, char*);
bool symbols(char);

int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	char string[256], word[56];
	std::cout << "введите строку: ";
	gets_s(string);
	std::cout << "введенная строка: " << string << std::endl;
	std::cout << "введите слово для удаления из строки: ";
	gets_s(word);
	std::cout << "введенное слово: " << word << std::endl;
	std::cout << "новая строка: " << newstring(string, word) << std::endl;
	system("pause");
	return 0;
}

char *newstring(char *string, char *word) {
	char *newstring = new char[strlen(string) + 1];
	int index = 0;
	int i = 0;
	int counter = 0;
	for(i = 0; i < strlen(string); i++) { 
		if(string[i] == word[0]) {
			int count = 1;
			for(int j = 1, l = i + 1; j < strlen(word); j++, l++) {
				if(string[l] == word[j])
					count++;
			}
			if(count == strlen(word) && symbols(string[i + count])) {
				i = i + count;
				counter++;
			}
		}
		newstring[index] = string[i];
		index++;
	}
	newstring[strlen(string) - strlen(word) * counter] = '\0';
	return newstring;
}
bool symbols(char symbol) {
	if((symbol >= 'À' && symbol <= 'ß') || (symbol >= 'à' && symbol <= 'ÿ'))
		return false;
	else if((symbol >= 'A' && symbol <= 'Z') || (symbol >= 'a' && symbol <= 'z'))
		return false;
	else if(symbol >= '0' && symbol <= '9')
		return false;
	return true;
}

Строка состоит из целых чисел, возможно отрицательных, разделенных пробелами или запятыми, найти сумму этих чисел.
#include <iostream>
#include <Windows.h>

int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	char string[] = "22, 33, -11 -1000 50, 44, -9, 55 66";
    int sum = 0, number = 0;
    bool flag = false;
    for(int i = 0; i < strlen(string); i++) {
        if(string[i] >= '0' && string[i] <= '9') {
            number += string[i] - 48;
            if(string[i + 1] >= '0' && string[i + 1] <= '9')
                number *= 10;
            else
                flag = true;
        }
        else if(string[i] == '-') {
            int index = i + 1;
            number += string[index] - 48;
            while(string[index + 1] >= '0' && string[index + 1] <= '9') {
                number *= 10;
                index++;
                number += string[index] - 48;
            }
            sum -= number;
            i = index + 1;
			number = 0;
            flag = false;
        }
        if(flag) {
            sum += number;
            number = 0;
            flag = false;
        }
    }
    std::cout << "сумма в чисел в текущей строке: " << sum << std::endl;
	system("pause");
	return 0;
}

Строка представляет собой арифметическое бесскобочное выражение, состоящее из операндов и арифметических бинарных операций(+, -,*, /).
Вывести операции.
Вывести операнды.
Вычислить значение выражения.
#include <iostream>
#include <Windows.h>

int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	char string[] = "5 + 10 - 15 * 20 / 25 + 100";
	char operations[256];
	char numbers[256];
	int index1 = 0, index2 = 0;
	for(int i = 0; i < strlen(string); i++) {
		if(string[i] == '+' || string[i] == '-' || string[i] == '*' || string[i] == '/') {
			operations[index1++] = string[i];
			operations[index1++] = ' ';
		}
		else if(string[i] >= '0' && string[i] <= '9') {
			numbers[index2++] = string[i];
			if(!(string[i + 1] >= '0' && string[i + 1] <= '9'))
				numbers[index2++] = ' ';
		}
	}
	operations[index1] = '\0';
	numbers[index2] = '\0';
	std::cout << "операции: " << operations << std::endl;
	std::cout << "операнды: " << numbers << std::endl;	
	system("pause");
	return 0;
}

Строка состоит из целых чисел бинарных арифметических операций и пробелов. Определить является ли строка арифметическим выражением. Например: 34 + 56 * 4 арифметическое выражение. Например: 34 + * 56 не является арифметическим выражением. Например: 56 56 + не является арифметическим выражением.
#include <iostream>
#include <Windows.h>

bool ArithmeticExpression(char*);

int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	char string1[] = "34 + 56 * 4";
	char string2[] = "34 + * 56";	
	if(ArithmeticExpression(string1))
		std::cout << "строка: \"" << string1 << "\" " << "является арифметическим выражением." << std::endl;
	else
		std::cout << "строка: \"" << string1 << "\" " << "не является арифметическим выражением." << std::endl;
	if(ArithmeticExpression(string2))
		std::cout << "строка: \"" << string2 << "\" " << "является арифметическим выражением." << std::endl;
	else
		std::cout << "строка: \"" << string2 << "\" " << "не является арифметическим выражением." << std::endl;
	system("pause");
	return 0;
}

bool ArithmeticExpression(char *string) {
	bool flag = true;
	for(int i = 0; i < strlen(string); i++) {
		if(string[i] == '+' || string[i] == '-' || string[i] == '*' || string[i] == '/') {
			if(string[i - 1] == ' ') {
				for(int j = i - 2; string[j] != ' ' && j > 0; j--)
					if(string[j] == '+' || string[j] == '-' || string[j] == '*' || string[j] == '/')
						flag = false;
			}
			else
				flag = false;
			if(string[i + 1] == ' ') {
				for(int k = i + 2; string[k] != ' ' && string[k] < strlen(string); k++)
					if(string[k] == '+' || string[k] == '-' || string[k] == '*' || string[k] == '/')
						flag = false;
			}
			else
				flag = false;
		}
	}
	return flag;
}
